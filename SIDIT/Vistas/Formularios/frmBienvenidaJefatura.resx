<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSolicitudesBJ.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pbInventarioBJ.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAArFJREFUeF7tnMlu1UAURIsVIDGv+AnIh4ZRfAz8BcNXAIsEsgpIDCrJb9OKUDw0
        t9rvHKmWsW69ctvt+PpKAAAAAAC75IakW5LuSrov6UG4XKNrdc2ufWhuSjqR9FLSR0lfJZ2H64ukD1PN
        rv12a2oUHkp6I+lC0qWk35L+DKJfkn5KOpP0WtKj1lw6LvjdZKI1N5p+TF58Qg2Bl6zPfBfemhlV9uKV
        4EtqNL5p+brppduaGF3fJD1NvzF75/BqJ5eeVl4Fz9NXgbdvnwa74V5X9uTdkT3G4j305yuKXyqbbreJ
        c7XlyeAtqj3G4gcZm24LXyof6/HCB7h7099uXY+PHUuPAPxDLsXBbV3P0QWwxnBaPd1JM5xWT3fSDKfV
        0500w2n1dCfNsG/gSfV0p0cA3kr6h/Sx54pt6Er538I+3hpt+SDm4x1VAGkigGIRQLEIoFgEUCwCKBYB
        FIsAikUAxSKAYhFAseID2PqlfJrsbc0r0u7QllKMG7Ne7Kwt8SA3m52mN2a5bc/te9+vMDCyfPa73fJJ
        emui8RniRtY9rQJ78coe5lsBt3K7pdvfBbRmRpMvPW9Hak8/4G8EvBK8dG1ipBuza/VZ745ofykTvfX8
        F74pu13dXcXvp22c99LJOnyi9Gy65kffdK/D4SO9Owt7PP+3dvWRHgAAAMDxwqyIQpgVUQizIgphVkQh
        zIoohFkRxTArohheyhezdVsKsyJm4gcZm24LXyofi1kRM+gRwJpGKGZFrNRaw2n1dCfNcFo93UkznFZP
        d9IMp9XTnTTDzIpYKR+LWREz2DoAZkXMZOsA0kQAxSKAYhFAsQigWARQLAIoFgEUiwCKRQDFIoBixQew
        9Uv5NDErolBDtKUwK6IYZkUEwKyIAJgVEQCzIgJgVkQAzIoAAAAAAMjiL5eZQo2Hbl9EAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>