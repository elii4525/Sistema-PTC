<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD0CAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAACLtJ
        REFUeNrt3XtsXnUBx+HvedttsEvZxigT3IANCLAJjCCpkAkREBCN/iEKkgCTRBI0QaOJhijqYkzUYEKI
        EQxGicTEyEUCiWA3ZME2uCEXmWEwmOwCY2yjZWPs0va8/vF2EQjX8Pbt6fY8yUmWXbrz/n49n/dc3p5T
        JKkH2C/VDAEIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgCMDe2GYP/Q1dWVzs7OlGVZyfWr1Wrp6+tL
        T09PZddxX1W37NtLURT17u7uetWtWLGiPmHCBHPWwsUhANV6N6q7PUUrCQAIACAAgAAAAgAIACAAgAAA
        AgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIACAA
        gAAAAgACYAj2ffV6PfV6fUys58DAgAlroXZDUC1tbW05++yzM3Xq1KZttEVRZObMmZV/7dOnT88ll1zS
        tAgURZEdO3aku7s7e/bs8c31dmOUpPpvDfuRiRMnZvny5Zk3b57BaIL169dnwYIF2bp1q8F4Gw4BKqgs
        S4NgLAUAEABAAAAB2A+MGzfOIDRxLIuiMBDvwGXAihkaGsqSJUuyZs2app7A6urqyowZMyr92vv7+9Pb
        29u0110URTZt2pTdu3f7xnoXdcu+vRRFUe/u7q5X3YoVK+rjx483Zy1cHALAfkwAQAAAAQAEABAAQAAA
        AQAEABAAQAAAAQAEABAAQAAAAQAEABAAQAAAAQAEABAAoMU8F+BDqtWSSQckHzk4OXZWcuzspHNqMvnA
        pL0t2T2Q9G9PXu5Pnno+Wb0h2fJqstOt6hGAsWvygcmJc5NPfzz5xPxk3lHJ5ImNGLS3J2lL4+HrZZKh
        Rghe35W8si155OlkyYqk58nkqbXGEgEYUxv+mScnl1+QnD4/OfyQNA6k6sN/Ye8jFwbf/O8mjG8s0zqS
        ubOSi85KVq1L7u1N7lyWPLIqGfIkawSgmooiOeno5FtfSr6wMOmYMvwH5fDyXupv/nWtlpwwJznhyOSL
        ZyV/uD+55Z5kw2ZjjQBUyoETkq+cm3z74uT4I/L/XfsPa/hrzDk8+eGi5FOnJD/+ffLAv5J63bgz8lwF
        eA/TpiSLr0yu/0Zy/FHDv9nsjXP46y08JbnpO8mizyTjPSCYFrAH8C46pyU/vSq57PxkXHua867/boaS
        o2clv/h6Izw33p7sGTQPjBx7AO/ggPHJdYuSRRcMb/yt2iUvk+kdyfcvTy4+xzwgAC3X3pZ89cLk8vOT
        WlsLN/696snUjuS6KxpXHEAAWuiMjyXfvTSZPGkUNv69ysblwh9ckRw6zZwgAC3RMTG55qJk9syM/DH/
        +4jAmScnV34uaTNTCMDIu/D05JxTq7M+7eOSKy5ofNIQBGAETe9ILj03mTI5o7fr/1ZlcsxHky+f3fgw
        EgjACFlwTLLwpIz+rv/bzNJnT3cuAAEYUeecmnRMquCK1ZMjZyZnnGiOEIAR0TFp+N2/rZoB6JiSdJ3g
        MAABGBFzD0sOm5HqHPu/VdE4F3BQFfdQEICxbvahyfQpFQ5Amcw5rPERYRCAJpvekUw8oNrrOPPgxv0I
        QACa7KDJybgJqe4eQL3xIaUJfkoQAWi+okjj5/ytIwKw/9kzkGSo2uu4ayAZrPg6IgBj0ivbkp27Ut13
        2CLZ0t+4sSgIQJOtfznp217tALzcJwAIwIh4fmOydVu1A7BqXeOZAiAATbapL3l6XSp7FWBwT/LE6mTX
        HnOFADTdwGBy38NJWcV78NWSl7YmDz5unhCAEdPzZPL8S6nkYUDPyuE9FBCAkfHci8ntD6ZahwFF8tqO
        5E9LPU8QARhRA4PJH7uTZ9ZXaGSK5L5/Jg88an4QgBH3xLPJTX9JBgeqMTsvbEp+fVfy6mvmBgFoidv+
        ltz9UEb3XECR7NqV3Hx38tC/zQkC0DKb+5Mf/S557OnRHaE7lyU33tE4NAEBaKGVa5Lv3ZSs2TA6o7R0
        RXLdLUm/XX8EYHR0P5Jcc0Pyn+da9B8WSVkm9/QkV/+ycVUCBGCU1OvJvb3JZT9J7l/e2EBH7LxALdm2
        I/nVXcnV1w9fiQABGH2PPpN87efJz25LNm5ucgiGv84TzyTfvCG59uZkw2ZjTmt4PPj7tG5Tcu1vkr8+
        nFz1+cYtxA+ZNrwB1/PBPjy0NyBlsu6l5M9/T357b/LUWuOMAFRWWSbLHk8eW52cOKfx+O5PnpwcMbNx
        2+43haD+ho19r1pjo9/Snzy7oRGTe3obJxyd6UcAxohtO5J/PJn0rkxmdSanHpecdExy3Oxk7uHJwR2N
        5wy01Rp3Gtq+M3lhc7J6Q7JqbfL46mTlf5MXtxhLBGDMKuvJ2k2N5Y5lyZSJjbv2ThiXtLcntSIZKhu3
        8dq5O9n+us/zIwD7rO2vNxYYK1wFAAEABAAQAEAAAAEABAAQAEAAAAEABAAYk/wswLDTTjst5513Xsqy
        rOw6Dg0N5dZbb83GjRtNGALQTAsXLszixYsrvY5lWWbp0qUCQNM4BHjDxlV1g4ODqdcr+vhiBAAQAEAA
        AAEABAAQAEAAAAEABAAQAEAAAAEABAAQAEAAAAEABAAQAEAAAAEABAAQAEAAAAEABAAQABAAQwACAAgA
        IACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAACAAgAIACAAAAC
        AAgAIACAAAACAAgAIACAAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAg
        AIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAFRVURQGoZXjnaRuGJI5c+Zk/vz5Kcuy
        sutYlmV6e3vT39//gf9tV1dXOjs7K/v6arVa+vr60tPTU+k5EABgn+EQAAQAEABAAAABAAQAEABAAAAB
        AAQAEABAAAABAMaI/wE5n9quhIZb1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>